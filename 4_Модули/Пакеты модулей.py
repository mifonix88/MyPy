#!/usr/bin/evn python
# -*- coding: utf-8 -*-

#Каталог с кодом Python называют пакетом

#инструкция импортирования пакетов имеет следующий вид
#import kat1.kat2 file
#from kat1.kat2.file import X
#где кат0\кат1\кат2\филе.py
#kat0 должен быть добавлен в окружение sys.path
#а кат1 и кат2 обязательно должны содержать файл __init__.py
#import kat.kat2.file as file #короткий синтакс для обращения к переменным
#print(file.x)
#from . . import file #импортирование относительно католога/  когда файл с одним и тем же именем встречается в нескольких местах внутри пути поиска модулей.
#Операции относительного импортирования применимы только к импортированию внутри пакетов.

'''
Файлы__ init__.ру могут содержать код Python подобно нормальным файлам модулей.
Они имеют специальные имена, поскольку их код выполняется автоматически,
когда Python импортирует каталог в первый раз, и потому служат главным образом в
качестве привязок для выполнения шагов инициализации, требующихся пакету: Тем
не менее, такие файлы могут также быть пустыми и временами исполнять дополнительные
роли,
'''


#В качестве расширенной возможности вы можете использовать в файлах
#__init__ .ру списки__ all__ для определения, что экспортировать, когда
#каталог импортируется с помощью формы оператора from *.


#import systeml.utilities
#import system2.utilities
#systeml.utilities.function (’spam’)
#system2.utilities.function('eggs’)
#Имена включающих каталогов делают ссылки на модули уникальными.

#import sys
#sys.path.append("F:\Флешка (важное)\Pyhton\Pyhton\4_Модули")
from paket.paket2 import test
test.test()

from paket import test
test.test()

import paket
print(paket.__path__)
print(paket.paket2.__path__)

#from . import test #терпит неудачу РАЗБЕРИСЬ


'''
from . import spam # Относительно этого пакета
указывает Python на необходимость импортирования модуля по имени spam, расположенного в том же самом каталоге пакета, что и файл, в котором находится данный оператор. Подобным же образом оператор:
from .spam import name
означает “импортировать переменную name из модуля по имени spam, который расположен в том же самом пакете, что и файл, содержащий этот оператор”.
'''

'''
кроме того, в будущем в Python могут добавить новый стандартный библиотечный модуль,
 который имеет такое же имя, как у вашего модуля. Код, опирающийся на операции относительного 
 импортирования, также сложнее понимать, потому что читатель может запутаться, 
 какой модуль планировалось использовать. Гораздо лучше, если распознавание можно делать явно в коде.
'''


